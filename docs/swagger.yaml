basePath: /
definitions:
  dto.CompId:
    properties:
      compid:
        type: integer
    type: object
  dto.DeleteEmployee:
    properties:
      change_user:
        type: string
      employee_id:
        type: integer
    type: object
  dto.DeleteEngineer:
    properties:
      change_user:
        type: string
      engineer_id:
        type: integer
    type: object
  dto.DeleteParty:
    properties:
      change_user:
        type: string
      party_code:
        type: integer
    type: object
  dto.EmployeeCode:
    properties:
      employee_id:
        type: integer
    type: object
  dto.EngineerCode:
    properties:
      engineer_id:
        type: integer
    type: object
  dto.PartyCode:
    properties:
      party_code:
        type: integer
    type: object
  dto.ResponseDto:
    properties:
      isSuccess:
        type: boolean
      message:
        type: string
      payload: {}
      statusCode:
        type: integer
    type: object
  dto.ResponseDtoV2:
    properties:
      data: {}
      isSuccess:
        type: boolean
      message:
        type: string
      statusCode:
        type: integer
    type: object
  dto.UpdateEmployee:
    properties:
      change_user:
        type: string
      compid:
        type: integer
      designation:
        type: string
      employee_email:
        type: string
      employee_id:
        type: integer
      employee_name:
        type: string
      employee_phone:
        type: string
    type: object
  dto.UpdateEngineer:
    properties:
      change_user:
        type: string
      compid:
        type: integer
      designation:
        type: string
      engineer_email:
        type: string
      engineer_id:
        type: integer
      engineer_name:
        type: string
      engineer_phone:
        type: string
    type: object
  dto.UpdateParty:
    properties:
      change_user:
        type: string
      id:
        type: integer
      party_address:
        type: string
      party_code:
        type: integer
      party_email:
        type: string
      party_name:
        type: string
      party_nid:
        type: string
      party_phone:
        type: string
    type: object
  model.EmployeeInfo:
    properties:
      compid:
        type: integer
      designation:
        type: string
      employee_email:
        type: string
      employee_id:
        type: integer
      employee_name:
        type: string
      employee_phone:
        type: string
    type: object
  model.EngineerInfo:
    properties:
      compid:
        type: integer
      designation:
        type: string
      engineer_email:
        type: string
      engineer_id:
        type: integer
      engineer_name:
        type: string
      engineer_phone:
        type: string
    type: object
  model.ServiceParty:
    properties:
      id:
        type: integer
      party_address:
        type: string
      party_code:
        type: integer
      party_email:
        type: string
      party_name:
        type: string
      party_nid:
        type: string
      party_phone:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: 118.67.213.45:7037
info:
  contact:
    email: suman@satcombd.com
    name: Sumon Sarker
  description: 'An API to perform `SICL IService API` operations. You can find out
    more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
    #swagger](http://swagger.io/irc/).'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SICL IService API
  version: "2.0"
paths:
  /iservice/employee-list/get-all-employee:
    get:
      description: Get All Employee
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDtoV2'
      security:
      - BearerAuth: []
      summary: Get All Employee
      tags:
      - Employee Entry Service
  /iservice/employee/create-one-employee:
    post:
      description: Create One Employee
      parameters:
      - description: Employee ID to get Employee details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/model.EmployeeInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDtoV2'
            type: array
      security:
      - BearerAuth: []
      summary: Create One Employee
      tags:
      - Employee Entry Service
  /iservice/employee/delete-employee:
    post:
      description: Create One Employee
      parameters:
      - description: Employee ID to get Employee details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteEmployee'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDto'
            type: array
      security:
      - BearerAuth: []
      summary: Create One Employee
      tags:
      - Employee Entry Service
  /iservice/employee/get-all-employee:
    post:
      description: Get All Employee
      parameters:
      - description: Comp ID to get Employee details
        in: body
        name: emp
        required: true
        schema:
          $ref: '#/definitions/dto.CompId'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDtoV2'
      security:
      - BearerAuth: []
      summary: Get All Employee
      tags:
      - Employee Entry Service
  /iservice/employee/get-all-employee-by-name:
    post:
      description: Get All Employee
      parameters:
      - description: Comp ID to get Employee details
        in: body
        name: emp
        required: true
        schema:
          $ref: '#/definitions/dto.CompId'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDtoV2'
      security:
      - BearerAuth: []
      summary: Get All Employee
      tags:
      - Employee Entry Service
  /iservice/employee/get-employee-id:
    get:
      description: Get New Employee Id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDtoV2'
      security:
      - BearerAuth: []
      summary: Get New Employee Id
      tags:
      - Employee Entry Service
  /iservice/employee/get-one-employee:
    post:
      description: Get One Employee
      parameters:
      - description: Employee ID to get Employee details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/dto.EmployeeCode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDtoV2'
            type: array
      security:
      - BearerAuth: []
      summary: Get One Employee
      tags:
      - Employee Entry Service
  /iservice/employee/update-employee:
    post:
      description: Update One Employee
      parameters:
      - description: Employee ID to get Employee details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateEmployee'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDtoV2'
            type: array
      security:
      - BearerAuth: []
      summary: Update One Employee
      tags:
      - Employee Entry Service
  /iservice/engineer-list/get-all-engineer:
    get:
      description: Get All Engineer
      parameters:
      - description: Comp ID to get Engineer details
        in: body
        name: emp
        required: true
        schema:
          $ref: '#/definitions/dto.CompId'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDtoV2'
      security:
      - BearerAuth: []
      summary: Get All Engineer
      tags:
      - Engineer Entry Service
  /iservice/engineer/create-one-engineer:
    post:
      description: Create One Engineer
      parameters:
      - description: Engineer ID to get Engineer details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/model.EngineerInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDtoV2'
            type: array
      security:
      - BearerAuth: []
      summary: Create One Engineer
      tags:
      - Engineer Entry Service
  /iservice/engineer/delete-engineer:
    post:
      description: Create One Engineer
      parameters:
      - description: Engineer ID to get Engineer details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteEngineer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDto'
            type: array
      security:
      - BearerAuth: []
      summary: Create One Engineer
      tags:
      - Engineer Entry Service
  /iservice/engineer/get-all-engineer:
    post:
      description: Get All Engineer
      parameters:
      - description: Comp ID to get Engineer details
        in: body
        name: emp
        required: true
        schema:
          $ref: '#/definitions/dto.CompId'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDtoV2'
      security:
      - BearerAuth: []
      summary: Get All Engineer
      tags:
      - Engineer Entry Service
  /iservice/engineer/get-all-engineer-by-name:
    post:
      description: Get All Engineer
      parameters:
      - description: Comp ID to get Engineer details
        in: body
        name: emp
        required: true
        schema:
          $ref: '#/definitions/dto.CompId'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDtoV2'
      security:
      - BearerAuth: []
      summary: Get All Engineer
      tags:
      - Engineer Entry Service
  /iservice/engineer/get-engineer-id:
    get:
      description: Get New Engineer Id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDtoV2'
      security:
      - BearerAuth: []
      summary: Get New Engineer Id
      tags:
      - Engineer Entry Service
  /iservice/engineer/get-one-engineer:
    post:
      description: Get One Engineer
      parameters:
      - description: Engineer ID to get Engineer details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/dto.EngineerCode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDtoV2'
            type: array
      security:
      - BearerAuth: []
      summary: Get One Engineer
      tags:
      - Engineer Entry Service
  /iservice/engineer/update-engineer:
    post:
      description: Update One Engineer
      parameters:
      - description: Engineer ID to get Engineer details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateEngineer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDtoV2'
            type: array
      security:
      - BearerAuth: []
      summary: Update One Engineer
      tags:
      - Engineer Entry Service
  /iservice/serive-party/get-service-party-id:
    get:
      description: Get New ServiceParty Id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDtoV2'
      security:
      - BearerAuth: []
      summary: Get New ServiceParty Id
      tags:
      - ServiceParty Entry Service
  /iservice/service-party/create-one-service-party:
    post:
      description: Create One ServiceParty
      parameters:
      - description: ServiceParty ID to get ServiceParty details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/model.ServiceParty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDtoV2'
            type: array
      security:
      - BearerAuth: []
      summary: Create One ServiceParty
      tags:
      - ServiceParty Entry Service
  /iservice/service-party/delete-service-party:
    post:
      description: Create One ServiceParty
      parameters:
      - description: ServiceParty ID to get ServiceParty details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteParty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDto'
            type: array
      security:
      - BearerAuth: []
      summary: Create One ServiceParty
      tags:
      - ServiceParty Entry Service
  /iservice/service-party/get-all-service-party:
    get:
      description: Get All ServiceParty
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDtoV2'
      security:
      - BearerAuth: []
      summary: Get All ServiceParty
      tags:
      - ServiceParty Entry Service
  /iservice/service-party/get-all-service-party-by-name:
    get:
      description: Get All ServiceParty
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDtoV2'
      security:
      - BearerAuth: []
      summary: Get All ServiceParty
      tags:
      - ServiceParty Entry Service
  /iservice/service-party/get-one-service-party:
    post:
      description: Get One ServiceParty
      parameters:
      - description: ServiceParty ID to get ServiceParty details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/dto.PartyCode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDtoV2'
            type: array
      security:
      - BearerAuth: []
      summary: Get One ServiceParty
      tags:
      - ServiceParty Entry Service
  /iservice/service-party/update-service-party:
    post:
      description: Update One ServiceParty
      parameters:
      - description: ServiceParty ID to get ServiceParty details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateParty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResponseDtoV2'
            type: array
      security:
      - BearerAuth: []
      summary: Update One ServiceParty
      tags:
      - ServiceParty Entry Service
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
